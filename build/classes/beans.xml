<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/aop 
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx
     	   http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/task
           http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<!-- 采用注释的方式配置bean -->
	<context:annotation-config />
	<!-- 配置要扫描的包 -->
	<context:component-scan base-package="cn.hehe9">
		<!-- <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" 
			/> -->
	</context:component-scan>

	<!--proxy-target-class="true"强制使用cglib代理 如果为false则spring会自动选择 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<!-- 数据库配置文件位置 -->
	<context:property-placeholder location="classpath:db.properties" />

	<!-- 配置dbcp数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${db.dataSource.url}" />
		<property name="username" value="${db.dataSource.username}" />
		<property name="password" value="${db.dataSource.password}" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${db.dataSource.initialSize}" />
		<property name="minIdle" value="${db.dataSource.minIdle}" />
		<property name="maxActive" value="${db.dataSource.maxActive}" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${db.dataSource.maxWait}" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis"
			value="${db.dataSource.timeBetweenEvictionRunsMillis}" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${db.dataSource.minEvictableIdleTimeMillis}" />
		<property name="validationQuery" value="${db.dataSource.validationQuery}" />
		<property name="testWhileIdle" value="${db.dataSource.testWhileIdle}" />
		<property name="testOnBorrow" value="${db.dataSource.testOnBorrow}" />
		<property name="testOnReturn" value="${db.dataSource.testOnReturn}" />
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="${db.dataSource.poolPreparedStatements}" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="${db.dataSource.maxPoolPreparedStatementPerConnectionSize}" />
		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="${db.dataSource.filters}" />
		<!-- 设置慢查询的时间 -->
		<property name="connectionProperties" value="${db.dataSource.connectionProperties}" />
	</bean>

	<!-- 配置mybitasSqlSessionFactoryBean -->
	<!-- <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> 
		<property name="dataSource" ref="dataSource" /> <property name="configLocation" 
		value="classpath:mybatis.xml"></property> </bean> -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath*:cn/hehe9/dao/mapper/*Mapper.xml" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.hehe9" />
		<property name="annotationClass" value="org.springframework.stereotype.Repository" />
	</bean>

	<!-- 配置SqlSessionTemplate -->
	<!-- <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate"> 
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" /> </bean> -->

	<!-- 事务配置 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 使用annotation注解方式配置事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 开启这个配置，spring才能识别@Scheduled注解 -->
	<!-- <task:annotation-driven scheduler="qbScheduler" mode="proxy" /> -->
	<!-- <task:scheduler id="qbScheduler" pool-size="10" /> -->

	<!-- 定时任务配置 -->
	<task:scheduled-tasks>
		<task:scheduled ref="videosCollectJob" method="executeJob"
			cron="0 28 20 * * ?" />
	</task:scheduled-tasks>


</beans>